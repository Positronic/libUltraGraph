This file contains documentations, ideas, things to not forget (TODO's),
or any old random thing that is not "placed" yet.  Most likely it belongs
in documentation somewhere, either at a high level or within a specific
module's DDoc.

Sometimes whole modules don't exist yet, or the part discussed here is yet
to be implemented, or maybe it never will.

The contents here are "use at your own risk" but may be important and we
don't want to throw anything away.

Documentation:



NIY (not implemented yet):
encode/decode to/from various formats: GraphSON, GML, dot, GraphViz, RDFS, etc. (what is most popular?)
    -Create a compact BSON-like binary property graph storage structure?
property graphs of various models (vertex properties only, edge props only, etc.)
RDF graphs
network flow graphs and related algorithms
spectral graph theory (properties of graph's adjacentcy matrix, etc.)
    -graph's spectrum is a graph invariant (other invariants)
    -isospectral (generated by Sunada method), polyhedral, isomorphic, cospectral, etc.
    -Cheeger inequality, constant (isoperimetric number) is a measure of "bottleneckedness"
    -spectral clustering
half-edge (or semi-infinite edge), resulting in open graphs and related algorithms and compositions/connections of such
    - in a sense, sub-graphs and graph partitions could be represented in this way - edges are literally "cut"
parallel and distributed versions of the most commonly used graph algorithms
    -see GraphLab and MapGraph for GPU (CUDA) implementations!
    -see Boost parallel graph library and related papers (INRIA), etc.
        -distributed graph and hypergraph partitioning algorithms among other things 
hypergraphs
    -very broad, need to flesh out basic graphs first
    -implement all/most of the graph algorithms generalized to hypergraphs
    -BDDs / ZDDs
ultragraphs
    -okay, not a "real" thing, but any higher-order mathematical structure,
     either generalizations of hypergraphs or other complementary combinatorial structure of use
    -hypergraphs where edges can point to other edges (mathematical name?)
    -families of sets and operations and representations of them
         -BDDs and ZDDs
         -finite and infinite families
         -disjoint union, cartesian products, etc.
         -see Knuth's Volume 4A
         -this is bordering on generalized set theoretic library and could
           probably be made into a separate library. On the other hand
           it IS an "ultra"graph library, lol
    -incidence structures
    -block designs
    -combinatorial designs
    -combinatorial species (concepts, categories, and generating functions for type of graphs/hypergraphs - among other abstractions)
    -quantum graphs! (technically just (open) graphs with differential functions/operators attached to the edges)
         -more generally metric graphs: each edge has an associated interval